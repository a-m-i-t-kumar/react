{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/ContactComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","bind","state","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","image","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","LeaderLoading","LeaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","firstname","lastname","telnum","email","agree","contactType","message","touched","handleSubmit","values","postFeedback","console","log","JSON","stringify","resetFeedbackForm","Breadcrumb","BreadcrumbItem","active","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderMenuItem","CardImgOverlay","Menu","menu","dishes","map","key","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","CommentForm","isModalOn","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","dishesFailed","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leads","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","withRouter","connect","dispatch","newFeedback","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newComment","addComment","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51f14111.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand,Nav,NavbarToggler,Collapse,NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen:false\r\n    };\r\n    this.toggleNav=this.toggleNav.bind(this);\r\n    this.toggleModal=this.toggleModal.bind(this);\r\n    this.handleLogin=this.handleLogin.bind(this);\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n  toggleModal(){\r\n      this.setState({isModalOpen:!this.state.isModalOpen});\r\n  }\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n                      <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='../assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n      <Jumbotron >\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen}toggle={this.toggleModal}>\r\n         <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n         <ModalBody>\r\n         <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n         </ModalBody>\r\n       </Modal>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion}\r\n                 isLoading={props.promoLoading}\r\n                 errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader}\r\n                 isLoading={props.LeaderLoading}\r\n                 errMess={props.LeaderErrMess}  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,Button, Label, Col,Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control,Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    \r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        console.log('Thank you for your feedback: ' + JSON.stringify(values));\r\n        alert('Your feedback is : ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\" href=\"skype:+85212345678\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n         </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle,Breadcrumb,BreadcrumbItem  } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\r\n                <CardImgOverlay  >\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n            \r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-auto \"key={dish.id}>\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n                \r\n            );\r\n        });\r\n        \r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n   \r\n        return (\r\n             <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <Breadcrumb>\r\n                  <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                  </Breadcrumb>\r\n                  <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr/>\r\n                  </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport  { baseUrl} from '../shared/baseUrl'; \r\nimport { Stagger } from 'react-animation-components';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderLeader({leader, isLoading, errMess}){\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n    return(\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                  <Media object src={baseUrl+leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>    \r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n           <Stagger in>\r\n               <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Media tag=\"li\">\r\n                    <RenderLeader leader={leader} isLoading={props.LeaderLoading}\r\n                         errMess={props.LeaderErrMess}/>\r\n                </Media>\r\n                </div>\r\n           </Stagger>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {leaders}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button,Label, Col, Row, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport {Link } from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n   \r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOn: false\r\n        };\r\n        this.toggleModal= this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOn: !this.state.isModalOn\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen = {this.state.isModalOn} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\" >\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\" >Rating</Label>                                \r\n                                    <Control.select model=\".rating\" name=\"ratingType\"\r\n                                        className= \"form-control\"> \r\n                                        <option>1</option> \r\n                                        <option>2</option> \r\n                                        <option>3</option> \r\n                                        <option>4</option>\r\n                                        <option>5</option>  \r\n                                    </Control.select> \r\n                                </Col>\r\n                            </Row> \r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>                               \r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(2), maxLength:maxLength(15)\r\n                                    }}/>\r\n                                    <Errors  className=\"text-danger\" \r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                    }}/>\r\n                                </Col>                                \r\n                            </Row>                                                     \r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>                               \r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"/>\r\n                                </Col>                                \r\n                            </Row>                           \r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>                               \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n             </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}){\r\n        if(dish!=null)\r\n            return(\r\n                <div  className=\"col-12 col-md-5 m-1\">    \r\n          <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n              <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n              </Card>\r\n         </FadeTransform>\r\n                </div>\r\n            );        \r\n        else\r\n            return(<div></div>);\r\n        \r\n    }\r\n\r\n    function RenderComments({comments,postComment,dishId}){\r\n        if(comments!=null)\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                                {comments.map((comment) => {\r\n                                    return (\r\n                                        <Fade in>\r\n                                        <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                        </Fade>\r\n                                    );\r\n                                })}\r\n                    </Stagger>\r\n                </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n            );\r\n        else\r\n            return(\r\n             <div></div>\r\n            );\r\n    }\r\n\r\n    const DishDetail = (props) => { \r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null){\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to= '/menu'>Menu</Link ></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr/>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"row\">                           \r\n                                <RenderDish dish = {props.dish} />        \r\n                                <RenderComments comments={props.comments}\r\n                                             postComment={props.postComment}\r\n                                             dishId={props.dish.id}\r\n      />                      \r\n                            </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div></div>\r\n                );\r\n            }        \r\n        }\r\n\r\n\r\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addComment =( comment)=>({\r\n   type:ActionTypes.ADD_COMMENT,\r\n   payload:comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) =>{ const newComment={\r\n                dishId:dishId,\r\n                rating:rating,\r\n                author:author,\r\n                comment:comment,\r\n         }\r\n\r\n         newComment.date=new Date().toISOString();\r\n         return fetch(baseUrl+'comments',{\r\n             method:'POST',\r\n             body:JSON.stringify(newComment),\r\n             headers:{\r\n                 'Content-Type':'application/json'\r\n             },\r\n             credentials:'same-origin'\r\n         })\r\n         .then(response => {\r\n            if (response.ok) {\r\n              return response;\r\n            } \r\n            else {\r\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n              error.response = response;\r\n              throw error;\r\n            }\r\n          },\r\n          error => {\r\n                var errMess=new Error(error.message);\r\n                throw errMess;\r\n          })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n    };    \r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errMess = new Error(error.message);\r\n            throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errMess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errMess = new Error(error.message);\r\n            throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n    };\r\nexport const commentsFailed = (errMess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errMess = new Error(error.message);\r\n            throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errMess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  \r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errMess = new Error(error.message);\r\n          throw errMess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leads => dispatch(addLeaders(leads)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errMess) => ({\r\n  type:ActionTypes.LEADERS_FAILED,\r\n  payload: errMess\r\n})\r\n\r\nexport const addLeaders = (leads) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leads\r\n})\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const ADD_FEEDBACK = \"ADD_FEEDBACK\";","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport { connect} from 'react-redux';\r\nimport { postFeedback, postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n // constructor(props) {\r\n  //  super(props);}\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n \r\n  render() {\r\n    \r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          LeaderLoading={this.props.leaders.isLoading}\r\n          LeaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n               <Switch>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}  />           \r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload,dishes:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess:null,\r\n    comments:[]\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n  \r\n            case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload,comments:[] };\r\n    \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state,comments:state.comments.concat(comment)};\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React,{ Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n       <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n       </BrowserRouter>\n       </Provider>\n    );\n  }\n}\n export default App;","import {createStore, combineReducers,applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n        return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}